---
# Example of a default-deny ServerAuthorization policy
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: backend-server-auth
  namespace: secure-apps
spec:
  server:
    selector:
      matchLabels:
        app: backend
  client:
    # Only allow specific services to communicate with backend
    meshTLS:
      unauthenticated: false
      identities:
      - "frontend.secure-apps.serviceaccount.identity.linkerd.cluster.local"
---
# Example of a NetworkAuthentication policy
apiVersion: policy.linkerd.io/v1beta1
kind: NetworkAuthentication
metadata:
  name: backend-network-auth
  namespace: secure-apps
spec:
  networks:
  - cidr: "10.0.0.0/16"
    except:
    - "10.0.1.0/24"
  - cidr: "192.168.0.0/16"
---
# Example of a MeshTLS policy
apiVersion: policy.linkerd.io/v1alpha1
kind: MeshTLS
metadata:
  name: service-mesh-auth
  namespace: secure-apps
spec:
  identities:
  - "*.secure-apps.serviceaccount.identity.linkerd.cluster.local"
  - "*.monitoring.serviceaccount.identity.linkerd.cluster.local"
---
# Example of a Kubernetes NetworkPolicy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: secure-apps
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Specific allow NetworkPolicy for frontend to backend
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-frontend-to-backend
  namespace: secure-apps
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - protocol: TCP
      port: 80
---
# Example HTTPRoute (Gateway API) for Linkerd ingress
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: frontend-route
  namespace: secure-apps
spec:
  parentRefs:
  - name: linkerd-gateway
    namespace: linkerd-gateway
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /api
    backendRefs:
    - name: frontend
      port: 80